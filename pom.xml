<?xml version="1.0" encoding="UTF-8"?><!-- This file is for releasing OpenL version wIth maven-release-plugin -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.openl.rules</groupId>
    <artifactId>openl-tablets</artifactId>
    <packaging>pom</packaging>
    <version>5.26.1-SNAPSHOT</version>
    <name>OpenL Tablets</name>
    <url>https://openl-tablets.org</url>
    <description>OpenL Tablets rules engine and related frameworks</description>
    <inceptionYear>2004</inceptionYear>
    <licenses>
        <license>
            <name>GNU Lesser General Public License</name>
            <url>http://www.gnu.org/licenses/lgpl.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <organization>
        <name>OpenL Tablets</name>
        <url>https://openl-tablets.org</url>
    </organization>
    <developers>
        <developer>
            <name>Stanislav Shor</name>
        </developer>
        <developer>
            <name>Yury Molchan</name>
            <email>ymolchan@eisgroup.com</email>
            <organization>EIS Group</organization>
            <organizationUrl>https://eisgroup.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+3</timezone>
        </developer>
        <developer>
            <name>Marat Kamalov</name>
            <email>mkamalov@eisgroup.com</email>
            <organization>EIS Group</organization>
            <organizationUrl>https://eisgroup.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+3</timezone>
        </developer>
        <developer>
            <name>Nail Samatov</name>
            <email>nsamatov@eisgroup.com</email>
            <organization>EIS Group</organization>
            <organizationUrl>https://eisgroup.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+3</timezone>
        </developer>
        <developer>
            <name>Vlad Pikus</name>
            <email>vpikus@eisgroup.com</email>
            <organization>EIS Group</organization>
            <organizationUrl>https://eisgroup.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+3</timezone>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:https://github.com/openl-tablets/openl-tablets.git</connection>
        <developerConnection>scm:git:git@github.com:openl-tablets/openl-tablets.git</developerConnection>
        <url>https://github.com/openl-tablets/openl-tablets</url>
        <tag>HEAD</tag>
    </scm>
    <repositories>
        <repository>
            <id>shibboleth-releases</id>
            <name>Shibboleth Repository</name>
            <url>https://build.shibboleth.net/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- If true, deploying of artifacts will be skipped  -->
        <maven.deploy.skip>false</maven.deploy.skip>
        <maven.install.skip>${maven.deploy.skip}</maven.install.skip>

        <!-- Managing dependencies versions -->
        <!-- Spring -->
        <spring.framework.version>5.3.22</spring.framework.version>
        <spring.boot.version>2.7.1</spring.boot.version>
        <reactive-streams.version>1.0.4</reactive-streams.version>

        <!-- Security -->
        <spring.security.version>5.7.2</spring.security.version>
        <opensaml.version>4.2.0</opensaml.version>

        <!-- Bytecode manipulation -->
        <asm.version>9.2</asm.version>
        <cglib.version>3.3.0</cglib.version>
        <cloning.version>1.9.12</cloning.version>

        <!-- Kafka -->
        <kafka.version>3.2.0</kafka.version>
        <kafka-junit.version>3.2.0</kafka-junit.version>

        <!-- Casandra -->
        <cassandra.driver.version>4.14.1</cassandra.driver.version>
        <cassandra.unit.version>3.11.2.0</cassandra.unit.version>
        <cassandra.unit.driver.version>3.11.2</cassandra.unit.driver.version>

        <!-- REST -->
        <jackson.version>2.13.3</jackson.version>
        <cxf.version>3.5.3</cxf.version>
        <!-- if updated org.apache.cxf.version to version from org.apache.cxf:cxf-rt-frontend-jaxrs:jar -->
        <jakarta.ws.rs-api.version>2.1.6</jakarta.ws.rs-api.version>
        <!-- if updated org.apache.cxf.version to version from org.apache.cxf:cxf-rt-databinding-aegis:jar -> org.apache.cxf:cxf-core -> org.glassfish.jaxb:jaxb-runtime -->
        <jakarta.activation.version>1.2.2</jakarta.activation.version>
        <stax-ex.version>1.8.3</stax-ex.version>

        <!-- OpenAPI -->
        <swagger.core.version>2.1.13</swagger.core.version>
        <!-- Can't bump to 2.0.16 version or higher to inline with swagger-core version -->
        <!-- Because some behaviour is changed and a lot of tests fails as a result. -->
        <swagger.parser.version>2.0.15</swagger.parser.version>
        <swagger-ui.version>4.11.1</swagger-ui.version>

        <!-- Logging -->
        <log4j.version>2.18.0</log4j.version>
        <slf4j.version>1.7.36</slf4j.version>

        <!-- OpenL Maven Plugin -->
        <maven.api.version>3.6.0</maven.api.version>
        <maven.plugin.version>3.6.0</maven.plugin.version>

        <!-- DEMO & ITEST -->
        <jetty.version>10.0.11</jetty.version>

        <!-- Hive -->
        <hive.jdbc.version>3.1.3</hive.jdbc.version>
        <avro.version>1.11.0</avro.version>
        <zookeeper.version>3.7.1</zookeeper.version>
        <thrift.version>0.16.0</thrift.version>
        <ant.version>1.10.12</ant.version>
        <netty.version>4.1.79.Final</netty.version>
        <reactor-netty-http.version>1.0.21</reactor-netty-http.version>
        <kotlin.stdlib.version>1.7.10</kotlin.stdlib.version>

        <!-- Request tracing -->
        <opentracing.web.servlet.filter>0.4.1</opentracing.web.servlet.filter>
        <jaeger.client.version>1.8.0</jaeger.client.version>
        <opentracing.kafka.client>0.1.15</opentracing.kafka.client>
        <opentracing.mock.version>0.33.0</opentracing.mock.version>
        <okhttp.version>4.10.0</okhttp.version>

        <!-- Repositories -->
        <amazonaws.version>1.12.262</amazonaws.version>
        <azure.version>12.18.0</azure.version>
        <jgit.version>6.2.0.202206071550-openl</jgit.version>

        <!-- DB -->
        <h2.version>2.1.214</h2.version>
        <mssql.version>10.2.1.jre11</mssql.version>
        <hikaricp.version>5.0.1</hikaricp.version>
        <hibernate.orm.version>5.6.10.Final</hibernate.orm.version>
        <hibernate.validator.version>6.2.3.Final</hibernate.validator.version>

        <!-- Testing -->
        <junit.version>4.13.2</junit.version>
        <awaitility.version>4.2.0</awaitility.version>
        <mockito.version>4.6.1</mockito.version>
        <datasource-proxy.version>1.8</datasource-proxy.version>
        <xmlunit.version>2.9.0</xmlunit.version>

        <!-- javax & Jakarta APIs -->
        <jakarta.annotation-api.version>1.3.5</jakarta.annotation-api.version>
        <jakarta.xml.bind-api.version>2.3.3</jakarta.xml.bind-api.version>
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
        <javax.websocket-api.version>1.1</javax.websocket-api.version>

        <!-- Cache -->
        <javax.cache-api.version>1.1.1</javax.cache-api.version>
        <cache2k.version>1.6.0.Final</cache2k.version>

        <!-- Mail -->
        <jakarta.mail.version>1.6.7</jakarta.mail.version>
        <greenmail.version>1.6.9</greenmail.version>

        <!-- Commons and utils -->
        <commons.codec.version>1.15</commons.codec.version>
        <commons.compress.version>1.21</commons.compress.version>
        <commons.collections.version>3.2.2</commons.collections.version>
        <commons.collections4.version>4.4</commons.collections4.version>
        <commons.io.version>2.11.0</commons.io.version>
        <commons.jxpath.version>1.3</commons.jxpath.version>
        <commons.lang.version>2.6</commons.lang.version>
        <commons.lang3.version>3.12.0</commons.lang3.version>

        <!-- protocols -->
        <hessian.version>4.0.38</hessian.version>
        <gson.version>2.9.0</gson.version>

        <bouncycastle.version>1.71</bouncycastle.version>
        <groovy.version>3.0.11</groovy.version>
        <poi.version>5.2.2</poi.version>
        <aspectj.version>1.9.9.1</aspectj.version>
        <velocity.version>2.3</velocity.version>
        <guava.version>31.1-jre</guava.version>
        <joda-time.version>2.10.14</joda-time.version>
        <xmlsec.version>2.3.1</xmlsec.version>
        <jcodemodel.version>3.4.1</jcodemodel.version>
        <istack.version>3.0.12</istack.version>
        <xstream.version>1.4.19</xstream.version>
        <activiti.version>5.18.0</activiti.version>
        <snakeyaml.version>1.30</snakeyaml.version>

        <!-- It needs to detect memory leaks. -->
        <!-- !!! Don't increase these parameters without special need !!! -->
        <!-- 48MB Should be enough to don't fall in OutOfMemoryError. It equals to MaxNonGCSize=30MB + ~50%-->
        <!-- 128MB allows do not worry about OutOfMemoryError. It equals to MaxNonGCSize=30MB + ~350% -->
        <surefire.argLine>-Xms8m -Xmx128m -Xss256k</surefire.argLine>
        <!-- Fine tuned settings to detects memory and performance issues -->
        <surefire.argLine.perf>-Xms8m -Xmx55m -Xss256k</surefire.argLine.perf>
        <openl.home>${project.build.directory}/openl-test-${openl.start.milli}</openl.home>
        <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
        <openl.info>main</openl.info>
    </properties>

    <modules>
        <module>DEV</module>
        <module>STUDIO</module>
        <module>WSFrontend</module>
        <module>EXT</module>
        <module>DEMO/org.openl.rules.demo</module>
        <module>Util/openl-maven-plugin</module>
        <module>Util/openl-simple-project-archetype</module>
        <module>Util/openl-project-archetype</module>
        <module>Util/openl-openapi-model-scaffolding</module>
        <module>Util/openl-openapi-parser</module>
        <module>Util/openl-excel-builder</module>
        <module>Util/org.openl.rules.profiler</module>
    </modules>
    <build>
        <defaultGoal>clean verify</defaultGoal>
        <sourceDirectory>src</sourceDirectory>
        <testSourceDirectory>test</testSourceDirectory>
        <resources>
            <resource>
                <directory>resources</directory>
            </resource>
            <resource>
                <directory>src</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>test-resources</directory>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-archetype-plugin</artifactId>
                    <version>3.2.1</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>javacc-maven-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>3.2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.8.1</version>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.12.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.9.0</version>
                    <configuration>
                        <release>11</release>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                    <configuration>
                        <systemPropertyVariables>
                            <openl.home>${openl.home}</openl.home>
                            <openl.info>${openl.info}</openl.info>
                            <openl.config.location />
                            <java.io.tmpdir>${java.io.tmpdir}</java.io.tmpdir>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.3.2</version>
                    <configuration>
                        <warSourceDirectory>webapp</warSourceDirectory>
                        <webappDirectory>${project.build.directory}/webapp</webappDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.3.0</version>
                    <configuration>
                        <appendAssemblyId>false</appendAssemblyId>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.2</version>
                    <configuration>
                        <skipIfEmpty>true</skipIfEmpty>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Build>${buildNumber}</Implementation-Build>
                                <Built-By>${user.name}</Built-By>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.basepom.maven</groupId>
                    <artifactId>duplicate-finder-maven-plugin</artifactId>
                    <version>1.5.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>${maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>3.2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>groovy-maven-plugin</artifactId>
                    <version>2.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.10.0</version>
                    <configuration>
                        <siteDirectory>${basedir}/site</siteDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-maven-plugin</artifactId>
                    <version>${jetty.version}</version>
                    <configuration>
                        <systemProperties>
                            <systemProperty>
                                <name>openl.home</name>
                                <value>${project.build.directory}/openl-jetty-${openl.start.milli}</value>
                            </systemProperty>
                            <systemProperty>
                                <name>openl.info</name>
                                <value>${openl.info}</value>
                            </systemProperty>
                            <systemProperty>
                                <name>java.io.tmpdir</name>
                                <value>${java.io.tmpdir}</value>
                            </systemProperty>
                        </systemProperties>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>${h2.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>7.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <timestampPropertyName>build.date</timestampPropertyName>
                    <timestampFormat>yyyy-MM-dd</timestampFormat>
                    <revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
                    <shortRevisionLength>12</shortRevisionLength>
                    <format>{0}</format>
                    <items>
                        <item>scmVersion</item>
                    </items>
                </configuration>
                <executions>
                    <execution>
                        <!-- Before generate-resources phase -->
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-ea ${jacoco.argLine} ${surefire.argLine} -Dapple.awt.UIElement=true</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.8</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>it</id>
            <activation>
                <property>
                    <name>!skipTests</name>
                </property>
            </activation>
            <modules>
                <module>ITEST</module>
            </modules>
        </profile>
        <profile>
            <id>perf</id>
            <activation>
                <property>
                    <name>!noPerf</name>
                </property>
            </activation>
            <properties>
                <surefire.argLine>${surefire.argLine.perf}</surefire.argLine>
            </properties>
        </profile>
        <profile>
            <id>no-sonar</id>
            <activation>
                <property>
                    <name>!sonar</name>
                </property>
            </activation>
            <properties>
                <!-- Empty for building without JaCoCo agent -->
                <jacoco.argLine />
                <!-- JaCoCo agent cannot be attached if ${argLine} is missed -->
            </properties>
        </profile>
        <profile>
            <id>sonar</id>
            <activation>
                <property>
                    <name>sonar</name>
                </property>
            </activation>
            <properties>
                <sonar />
                <invoker.timeoutInSeconds>40</invoker.timeoutInSeconds>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.8.7</version>
                        <configuration>
                            <propertyName>jacoco.argLine</propertyName>
                            <includes>
                                <include>org/openl/**/*</include>
                            </includes>
                            <excludes>
                                <exclude>org/openl/generated/**/*</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>prepare-ut</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>prepare-it</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>gpg-sign</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.simplify4u.plugins</groupId>
                        <artifactId>sign-maven-plugin</artifactId>
                        <version>1.0.1</version>
                        <configuration>
                            <skip>${maven.deploy.skip}</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>sources</id>
            <properties>
                <!-- If true, generating of JavaDocs will be skipped  -->
                <maven.javadoc.skip>false</maven.javadoc.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.2.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.4.0</version>
                        <configuration>
                            <!-- To skip invalid HTML4 tags -->
                            <!-- http://openjdk.java.net/jeps/172 -->
                            <doclint>none</doclint>
                            <skip>${maven.javadoc.skip}</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generateOpenLDefaultConfig</id>
            <properties>
                <!-- If none, generating of application.properties will be skipped  -->
                <!-- Use process-resources to generate application.properties -->
                <!-- See RuleService and WebStudio -->
                <generate-application.properties>none</generate-application.properties>
            </properties>
            <activation>
                <property>
                    <name>!skip</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-war-plugin</artifactId>
                            <configuration>
                                <!--Jboss Modules are not exposing some dependencies needed by Objenesis to do constructor injection (reproduced on java11 + jboss7.2 - 7.3).
                                The solution is to add the dependencies by updating the project build-->
                                <archive>
                                    <manifestEntries>
                                        <Dependencies>jdk.unsupported</Dependencies>
                                    </manifestEntries>
                                </archive>
                                <webResources>
                                    <resource>
                                        <directory>target</directory>
                                        <includes>
                                            <include>application-example.properties</include>
                                        </includes>
                                        <targetPath>WEB-INF/classes</targetPath>
                                    </resource>
                                </webResources>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <configuration>
                            <classpathScope>runtime</classpathScope>
                            <source>
                                ConfigurationFactory.setConfigurationFactory(new ConfigurationFactory() {
                                    // Disable logging using log4j2.properties which are located somewhere in the classpath
                                    // Use the default logging
                                    @Override
                                    protected String[] getSupportedTypes() {
                                        return null;
                                    }

                                    @Override
                                    Configuration getConfiguration(LoggerContext loggerContext, ConfigurationSource source) {
                                        return new DefaultConfiguration();
                                    }

                                    @Override
                                    Configuration getConfiguration(LoggerContext loggerContext, String name, URI configLocation, ClassLoader loader) {
                                        return new DefaultConfiguration();
                                    }
                                })
                                System.setProperty("log4j2.disable.jmx", "true");
                                log.info("Generating application.properties from:")


                                import org.apache.logging.log4j.core.LoggerContext
                                import org.apache.logging.log4j.core.config.Configuration
                                import org.apache.logging.log4j.core.config.ConfigurationFactory
                                import org.apache.logging.log4j.core.config.ConfigurationSource
                                import org.apache.logging.log4j.core.config.DefaultConfiguration
                                import org.openl.util.StringUtils
                                import org.springframework.core.io.Resource;
                                import org.springframework.core.io.support.PathMatchingResourcePatternResolver;

                                PathMatchingResourcePatternResolver prpr = new PathMatchingResourcePatternResolver(this.class.getClassLoader());
                                // See :org.openl.spring artifact.
                                Resource[] resources = prpr.getResources("classpath*:openl-default.properties");

                                def targetDir = new File(project.build.directory);
                                targetDir.mkdirs();
                                def out = new File(targetDir, "application-example.properties");
                                def write = {
                                    String text -&gt;
                                        out.append(text)
                                        if (!text.endsWith("\r\n")) {
                                            out.append("\r\n")
                                        }
                                        log.debug("   | {}", text)
                                }

                                write("#############################################################################################");
                                write("###   ***  This file was generated!  ***                                                  ###");
                                write("###   It is a composition of all default settings are used in the application.            ###");
                                write("###   To customize settings, you can define it as an application.properties located at:   ###");
                                write("###     * User's home directory:  ~/application.properties                                ###");
                                write("###     * Working directory:      ./application.properties                                ###");
                                write("###   Also all properties can be defined via:                                             ###");
                                write("###     * Java system properties, like:                 -Dopenl.home=/home/openl          ###");
                                write("###     * System environment variable as is:       export openl.home=/home/openl          ###");
                                write("###     * or in the upper case with underscores:   export OPENL_HOME=/home/openl          ###");
                                write("#############################################################################################");
                                write("")

                                resources.each {
                                    def url = it.getURL()
                                    log.info("  {}", url)
                                    write "#-------------------------------------------------------------------------------------------#"
                                    write "### From: ${(url =~ /([^\/]+(!\/.*)?)$/)[0][1]}"
                                    write "#-------------------------------------------------------------------------------------------#"
                                    it.getInputStream().eachLine {
                                        if (StringUtils.isBlank(it)) {
                                            write ""
                                        } else if (it.startsWith('#')) {
                                            write it.trim()
                                        } else {
                                            write "#" + it.trim()
                                        }
                                    }
                                    write ""
                                }
                            </source>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.logging.log4j</groupId>
                                <artifactId>log4j-slf4j-impl</artifactId>
                                <version>${log4j.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.logging.log4j</groupId>
                                <artifactId>log4j-api</artifactId>
                                <version>${log4j.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>generate-application.properties</id>
                                <phase>${generate-application.properties}</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>owasp</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <dependencyManagement>
        <dependencies>
            <!-- Testing -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Mock objects library for java -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.ttddyy</groupId>
                <artifactId>datasource-proxy</artifactId>
                <version>${datasource-proxy.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.xmlunit</groupId>
                <artifactId>xmlunit-core</artifactId>
                <version>${xmlunit.version}</version>
            </dependency>
            <!-- Jetty for ITEST -->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-webapp</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-annotations</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>apache-jsp</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-home</artifactId>
                <version>${jetty.version}</version>
                <type>zip</type>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <!-- Apache Velocity is a general purpose template engine. -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons.lang.version}</version>
            </dependency>
            <!-- Apache Commons Lang, a package of Java utility classes for the classes that are in java.lang's hierarchy,
            or are considered to be so standard as to justify existence in java.lang. -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>
            <!-- The Apache Commons Collections package contains types that extend and augment the Java Collections Framework. -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons.collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons.collections.version}</version>
            </dependency>
            <!-- contains simple encoder and decoders for various formats such as Base64 and Hexadecimal. -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons.codec.version}</version>
            </dependency>
            <!-- The Commons IO library contains utility classes, stream implementations, file filters,
            file comparators, endian transformation classes, and much more. -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
            <!-- Spring Framework -->
            <!-- Core utilities used by other modules. Define this if you use Spring
                Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>
            <!-- Expression Language (depends on spring-core) Define this if you use
                Spring Expression APIs (org.springframework.expression.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>
            <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define
                this if you use Spring Bean APIs (org.springframework.beans.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>
            <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core,
                spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>
            <!-- Application Context (depends on spring-core, spring-expression, spring-aop,
                spring-beans) This is the central artifact for Spring's Dependency Injection
                Container and is generally always defined -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>
            <!-- Various Application Context utilities, including EhCache, JavaMail,
                Quartz, and Freemarker integration Define this if you need any of these integrations -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>
            <!-- Transaction Management Abstraction (depends on spring-core, spring-beans,
                spring-aop, spring-context) Define this if you use Spring Transactions or
                DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>
            <!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context,
                spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>
            <!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA,
                and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx)
                Define this if you need ORM (org.springframework.orm.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>
            <!-- Web application development utilities applicable to both Servlet
                and Portlet Environments (depends on spring-core, spring-beans, spring-context)
                Define this if you use Spring MVC, or wish to use Struts, JSF, or another
                web framework with Spring (org.springframework.web.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>
            <!-- Spring's TestContext framework. Also includes common Servlet and Portlet API mocks. -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.framework.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Spring Boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Spring Security -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-ldap</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-cas</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-saml2-service-provider</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <!-- Spring 5.x, needed for JBoss metadata scanning  https://issues.jboss.org/browse/JBEAP-10163 -->
            <dependency>
                <groupId>org.reactivestreams</groupId>
                <artifactId>reactive-streams</artifactId>
                <version>${reactive-streams.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>${groovy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-core</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-saml-api</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-saml-impl</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-oauth2-client</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <!-- Necessary for oauth2 Oidc. -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-oauth2-jose</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <!--poi and opensaml -->
                <groupId>org.apache.santuario</groupId>
                <artifactId>xmlsec</artifactId>
                <version>${xmlsec.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdicons.jsontools</groupId>
                <artifactId>jsontools-core</artifactId>
                <version>1.7</version>
            </dependency>
            <!-- BEGIN of JSF, JSP, Servlets, RichFaces -->
            <!-- JSF -->
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.faces</artifactId>
                <!-- Don't upgrade to 2.4.0. https://balusc.omnifaces.org/2018/04/do-not-use-orgglassfish-mojarra-240.html
                    At the time of writing the latest official version is 2.3.9.
                 -->
                <version>2.3.9</version>
            </dependency>
            <dependency>
                <groupId>javax.enterprise</groupId>
                <artifactId>cdi-api</artifactId>
                <version>2.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.el</groupId>
                        <artifactId>javax.el-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- RichFaces -->
            <!-- RichFaces reached end-of-life status with version 4.5.17.Final so vulnerabilities will not be fixed.
            To fix that we use forked richfaces implementation until we stop using richfaces features. -->
            <dependency>
                <groupId>com.github.albfernandez.richfaces</groupId>
                <artifactId>richfaces</artifactId>
                <version>4.6.8.ayg</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Servlets -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>jsp-api</artifactId>
                <version>2.1</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>1.2</version>
            </dependency>
            <!-- Provides the API for the Unified Expression Language shared by the JSP 2.1 and JSF 1.2 technologies. -->
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>3.0.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>3.0.0</version>
                <scope>provided</scope>
            </dependency>
            <!--added for fix problem webstudio failure on Websphere, due to new JSF version-->
            <dependency>
                <groupId>javax.websocket</groupId>
                <artifactId>javax.websocket-api</artifactId>
                <version>${javax.websocket-api.version}</version>
            </dependency>
            <!-- Apache log4j, a logging library for Java -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <!-- The slf4j API -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Byte code generation library -->
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-commons</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-analysis</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-tree</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-util</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <!-- Code generation library with shaded ASM dependecies -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <!-- Java source code generation library -->
            <dependency>
                <groupId>com.helger</groupId>
                <artifactId>jcodemodel</artifactId>
                <version>${jcodemodel.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>${jakarta.annotation-api.version}</version>
            </dependency>
            <!-- Apache CXF Runtime JAX-RS Frontend -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxrs</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.ws.rs</groupId>
                <artifactId>jakarta.ws.rs-api</artifactId>
                <version>${jakarta.ws.rs-api.version}</version>
            </dependency>
            <dependency>
                <!-- for CXF to resolve duplicated dependencies of javax.activation:activation -->
                <groupId>org.jvnet.staxex</groupId>
                <artifactId>stax-ex</artifactId>
                <version>${stax-ex.version}</version>
            </dependency>
            <!-- Apache CXF JAX-RS Extensions: Providers -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-extension-providers</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <!-- Apache CXF Runtime HTTP Transport -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <!-- Apache CXF Runtime HTTP Jetty Transport -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http-jetty</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <!-- Apache CXF Runtime JAXRS Client -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-client</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http-hc</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <!-- CXF Runtime CORBA Binding -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-service-description-openapi-v3</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.github.classgraph</groupId>
                        <artifactId>classgraph</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-management</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>swagger-ui</artifactId>
                <version>${swagger-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datastax.oss</groupId>
                <artifactId>java-driver-core-shaded</artifactId>
                <version>${cassandra.driver.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datastax.oss</groupId>
                <artifactId>java-driver-mapper-processor</artifactId>
                <version>${cassandra.driver.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.datastax.oss</groupId>
                        <artifactId>java-driver-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.cassandraunit</groupId>
                <artifactId>cassandra-unit</artifactId>
                <version>${cassandra.unit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-core</artifactId>
                <version>${cassandra.unit.driver.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-mapping</artifactId>
                <version>${cassandra.unit.driver.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.icegreen</groupId>
                <artifactId>greenmail-junit4</artifactId>
                <version>${greenmail.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <!-- Full jar with all schemas. It's a replacement for poi-ooxml-schemas jar when the full schema is needed -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-full</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <!-- used in POI -->
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons.compress.version}</version>
            </dependency>
            <!-- http://download.java.net/java/jdk9/docs/api/java.xml.bind-summary.html -->
            <!-- Required for Java11 -->
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jakarta.xml.bind-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.activation</groupId>
                <artifactId>jakarta.activation</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.activation</groupId>
                <artifactId>jakarta.activation-api</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.istack</groupId>
                <artifactId>istack-commons-runtime</artifactId>
                <version>${istack.version}</version>
            </dependency>
            <!-- serialize objects to XML (or JSON) and back again. -->
            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>${xstream.version}</version>
            </dependency>
            <!-- graph-theory data structures and algorithms. -->
            <dependency>
                <groupId>org.jgrapht</groupId>
                <artifactId>jgrapht-core</artifactId>
                <version>0.9.0</version>
            </dependency>
            <!-- standards-based cache for boosting performance -->
            <dependency>
                <groupId>javax.cache</groupId>
                <artifactId>cache-api</artifactId>
                <version>${javax.cache-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.cache2k</groupId>
                <artifactId>cache2k-jcache</artifactId>
                <version>${cache2k.version}</version>
            </dependency>
            <!-- Java library which deep-clones objects. -->
            <dependency>
                <groupId>uk.com.robust-it</groupId>
                <artifactId>cloning</artifactId>
                <version>${cloning.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-jxpath</groupId>
                <artifactId>commons-jxpath</artifactId>
                <version>${commons.jxpath.version}</version>
            </dependency>
            <!-- Hessian is a compact binary protocol for connecting web services. -->
            <dependency>
                <groupId>com.caucho</groupId>
                <artifactId>hessian</artifactId>
                <version>${hessian.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-s3</artifactId>
                <version>${amazonaws.version}</version>
            </dependency>
            <dependency>
                <groupId>com.azure</groupId>
                <artifactId>azure-storage-blob</artifactId>
                <version>${azure.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-tcnative-boringssl-static</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.datatype</groupId>
                        <artifactId>jackson-datatype-jsr310</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.module</groupId>
                        <artifactId>jackson-module-jaxb-annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.dataformat</groupId>
                        <artifactId>jackson-dataformat-xml</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.woodstox</groupId>
                        <artifactId>woodstox-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-core</artifactId>
                <version>${amazonaws.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.openl.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.jgit</groupId>
                <artifactId>org.eclipse.jgit.lfs</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!-- The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar
            contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.
            Used by jgit and saml. -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpg-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <!-- HikariCP - A high-performance JDBC connection pool. -->
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikaricp.version}</version>
            </dependency>
            <!-- Microsoft JDBC Driver for SQL Server -->
            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>mssql-jdbc</artifactId>
                <version>${mssql.version}</version>
            </dependency>
            <!-- the Java in-memory SQL DB -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>
            <!-- Flyway: The agile database migration framework for Java. -->
            <dependency>
                <groupId>org.openl</groupId>
                <artifactId>flyway-core</artifactId>
                <!-- Version is frozen due license was changed -->
                <version>4.2.0.1</version>
            </dependency>
            <!-- Hibernate -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.orm.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.spec.javax.transaction</groupId>
                        <artifactId>jboss-transaction-api_1.2_spec</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.activation</groupId>
                        <artifactId>javax.activation-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.orm.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.spec.javax.transaction</groupId>
                        <artifactId>jboss-transaction-api_1.2_spec</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-hikaricp</artifactId>
                <version>${hibernate.orm.version}</version>
            </dependency>
            <!-- Hibernate's Bean Validation (JSR-303) reference implementation. -->
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jaxb-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-parameter-names</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- Overrides old vulnerable releases from Elasticsearch and Amazon S3 SDK libs  -->
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-cbor</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-smile</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <!-- Jakarta Mail Api for SMTP server connection, depends on Jakarta Activation -->
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>jakarta.mail</artifactId>
                <version>${jakarta.mail.version}</version>
            </dependency>
            <!-- OpenAPI -->
            <dependency>
                <groupId>io.swagger.parser.v3</groupId>
                <artifactId>swagger-parser</artifactId>
                <version>${swagger.parser.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.swagger.parser.v3</groupId>
                        <artifactId>swagger-parser-v2-converter</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-jaxrs2</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-core</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>
            <!--Activity -->
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-engine</artifactId>
                <version>${activiti.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.activation</groupId>
                        <artifactId>activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-spring</artifactId>
                <version>${activiti.version}</version>
            </dependency>
            <!--//Activity -->
            <!-- Kafka -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>net.mguenther.kafka</groupId>
                <artifactId>kafka-junit</artifactId>
                <version>${kafka-junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-log4j-appender</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <!-- //Kafka -->
            <!-- OpenTracing -->
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-mock</artifactId>
                <version>${opentracing.mock.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- dependencies to annotations for maven-plugin-plugin -->
            <dependency>
                <groupId>org.apache.maven.plugin-tools</groupId>
                <artifactId>maven-plugin-annotations</artifactId>
                <version>${maven.plugin.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-plugin-api</artifactId>
                <version>${maven.api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-core</artifactId>
                <version>${maven.api.version}</version>
            </dependency>
            <!-- hive & azure -->
            <dependency>
                <groupId>io.projectreactor.netty</groupId>
                <artifactId>reactor-netty-http</artifactId>
                <version>${reactor-netty-http.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http2</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-socks</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler-proxy</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-classes-kqueue</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-classes-epoll</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <classifier>linux-x86_64</classifier>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-kqueue</artifactId>
                <classifier>osx-x86_64</classifier>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-unix-common</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <!-- //hive -->
            <!-- jaeger -->
            <dependency>
                <groupId>io.opentracing.contrib</groupId>
                <artifactId>opentracing-web-servlet-filter</artifactId>
                <version>${opentracing.web.servlet.filter}</version>
            </dependency>
            <dependency>
                <groupId>io.jaegertracing</groupId>
                <artifactId>jaeger-client</artifactId>
                <version>${jaeger.client.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.tomcat.embed</groupId>
                        <artifactId>tomcat-embed-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.annotation</groupId>
                        <artifactId>javax.annotation-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.opentracing.contrib</groupId>
                <artifactId>opentracing-kafka-client</artifactId>
                <version>${opentracing.kafka.client}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.stdlib.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-common</artifactId>
                <version>${kotlin.stdlib.version}</version>
            </dependency>
            <!-- //jaeger -->
            <!-- OpenL modules -->
            <!-- DEV -->
            <dependency>
                <groupId>org.openl</groupId>
                <artifactId>org.openl.commons</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl</groupId>
                <artifactId>org.openl.rules.util</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl</groupId>
                <artifactId>org.openl.spring</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl</groupId>
                <artifactId>org.openl.core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl</groupId>
                <artifactId>org.openl.core.annotations</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl</groupId>
                <artifactId>org.openl.grammars</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.calculation.result</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.constrainer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- STUDIO -->
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.activiti</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.demo</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.diff</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.project</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.repository</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.repository.aws</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.repository.git</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.repository.azure</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.security</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.security.standalone</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.security.cas</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.security.saml</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.security.oauth2</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.tableeditor</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.variation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.project.validation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.project.validation.openapi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.project.openapi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.webstudio</artifactId>
                <type>war</type>
                <scope>runtime</scope>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.webstudio</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.workspace</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.jackson</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.jackson.configuration</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.test</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
                <optional>true</optional>
            </dependency>
            <!-- WSFrontend -->
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.annotation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.rmi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.rmi.frontend</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.kafka</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws</artifactId>
                <type>war</type>
                <scope>runtime</scope>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.annotation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws</artifactId>
                <classifier>classes</classifier>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.storelogdata</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.storelogdata.cassandra</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.storelogdata.cassandra.annotation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.storelogdata.db</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.storelogdata.db.annotation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.storelogdata.hive.annotation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.storelogdata.hive</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.deployer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.tracing.jaeger</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Util -->
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>openl-maven-plugin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>openl-openapi-model-scaffolding</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>openl-openapi-parser</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>openl-excel-builder</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.webstudio.web</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Mock objects library for java -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
